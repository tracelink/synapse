/*
 * Veracode Summary Report API
 * Veracode Summary Report API Documentation
 *
 * OpenAPI spec version: v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.tracelink.prodsec.lib.veracode.api.rest.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;

/**
 * Component
 */
public class Component {
	@SerializedName("file_paths")
	private FilePathList filePaths = null;

	@SerializedName("licenses")
	private LicenseList licenses = null;

	@SerializedName("vulnerabilities")
	private VulnerabilityList vulnerabilities = null;

	@SerializedName("violated_policy_rules")
	private ViolatedRuleList violatedPolicyRules = null;

	@SerializedName("component_id")
	private String componentId = null;

	@SerializedName("file_name")
	private String fileName = null;

	@SerializedName("sha1")
	private String sha1 = null;

	@SerializedName("vulnerability")
	private Long vulnerability = null;

	@SerializedName("max_cvss_score")
	private String maxCvssScore = null;

	@SerializedName("library")
	private String library = null;

	@SerializedName("version")
	private String version = null;

	@SerializedName("vendor")
	private String vendor = null;

	@SerializedName("description")
	private String description = null;

	@SerializedName("blacklisted")
	private String blacklisted = null;

	@SerializedName("_new")
	private String _new = null;

	@SerializedName("added_date")
	private String addedDate = null;

	@SerializedName("component_affects_policy_compliance")
	private String componentAffectsPolicyCompliance = null;

	public Component filePaths(FilePathList filePaths) {
		this.filePaths = filePaths;
		return this;
	}

	/**
	 * Get filePaths
	 * 
	 * @return filePaths
	 **/
	public FilePathList getFilePaths() {
		return filePaths;
	}

	public void setFilePaths(FilePathList filePaths) {
		this.filePaths = filePaths;
	}

	public Component licenses(LicenseList licenses) {
		this.licenses = licenses;
		return this;
	}

	/**
	 * Get licenses
	 * 
	 * @return licenses
	 **/
	public LicenseList getLicenses() {
		return licenses;
	}

	public void setLicenses(LicenseList licenses) {
		this.licenses = licenses;
	}

	public Component vulnerabilities(VulnerabilityList vulnerabilities) {
		this.vulnerabilities = vulnerabilities;
		return this;
	}

	/**
	 * Get vulnerabilities
	 * 
	 * @return vulnerabilities
	 **/
	public VulnerabilityList getVulnerabilities() {
		return vulnerabilities;
	}

	public void setVulnerabilities(VulnerabilityList vulnerabilities) {
		this.vulnerabilities = vulnerabilities;
	}

	public Component violatedPolicyRules(ViolatedRuleList violatedPolicyRules) {
		this.violatedPolicyRules = violatedPolicyRules;
		return this;
	}

	/**
	 * Get violatedPolicyRules
	 * 
	 * @return violatedPolicyRules
	 **/
	public ViolatedRuleList getViolatedPolicyRules() {
		return violatedPolicyRules;
	}

	public void setViolatedPolicyRules(ViolatedRuleList violatedPolicyRules) {
		this.violatedPolicyRules = violatedPolicyRules;
	}

	public Component componentId(String componentId) {
		this.componentId = componentId;
		return this;
	}

	/**
	 * ID of the component.
	 * 
	 * @return componentId
	 **/
	public String getComponentId() {
		return componentId;
	}

	public void setComponentId(String componentId) {
		this.componentId = componentId;
	}

	public Component fileName(String fileName) {
		this.fileName = fileName;
		return this;
	}

	/**
	 * Filename of the component.
	 * 
	 * @return fileName
	 **/
	public String getFileName() {
		return fileName;
	}

	public void setFileName(String fileName) {
		this.fileName = fileName;
	}

	public Component sha1(String sha1) {
		this.sha1 = sha1;
		return this;
	}

	/**
	 * sha1
	 * 
	 * @return sha1
	 **/
	public String getSha1() {
		return sha1;
	}

	public void setSha1(String sha1) {
		this.sha1 = sha1;
	}

	public Component vulnerability(Long vulnerability) {
		this.vulnerability = vulnerability;
		return this;
	}

	/**
	 * Number of vulnerabilities that Veracode discovered in the component.
	 * 
	 * @return vulnerability
	 **/
	public Long getVulnerability() {
		return vulnerability;
	}

	public void setVulnerability(Long vulnerability) {
		this.vulnerability = vulnerability;
	}

	public Component maxCvssScore(String maxCvssScore) {
		this.maxCvssScore = maxCvssScore;
		return this;
	}

	/**
	 * Max Common Vulnerability Scoring System (CVSS) of the component. See
	 * cvss_score.
	 * 
	 * @return maxCvssScore
	 **/
	public String getMaxCvssScore() {
		return maxCvssScore;
	}

	public void setMaxCvssScore(String maxCvssScore) {
		this.maxCvssScore = maxCvssScore;
	}

	public Component library(String library) {
		this.library = library;
		return this;
	}

	/**
	 * Library name of the component.
	 * 
	 * @return library
	 **/
	public String getLibrary() {
		return library;
	}

	public void setLibrary(String library) {
		this.library = library;
	}

	public Component version(String version) {
		this.version = version;
		return this;
	}

	/**
	 * Version of the component.
	 * 
	 * @return version
	 **/
	public String getVersion() {
		return version;
	}

	public void setVersion(String version) {
		this.version = version;
	}

	public Component vendor(String vendor) {
		this.vendor = vendor;
		return this;
	}

	/**
	 * Vendor name of the component.
	 * 
	 * @return vendor
	 **/
	public String getVendor() {
		return vendor;
	}

	public void setVendor(String vendor) {
		this.vendor = vendor;
	}

	public Component description(String description) {
		this.description = description;
		return this;
	}

	/**
	 * Description of the component.
	 * 
	 * @return description
	 **/
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public Component blacklisted(String blacklisted) {
		this.blacklisted = blacklisted;
		return this;
	}

	/**
	 * Blacklisted status for the component.
	 * 
	 * @return blacklisted
	 **/
	public String getBlacklisted() {
		return blacklisted;
	}

	public void setBlacklisted(String blacklisted) {
		this.blacklisted = blacklisted;
	}

	public Component _new(String _new) {
		this._new = _new;
		return this;
	}

	/**
	 * Whether this is a newly-added component.
	 * 
	 * @return _new
	 **/
	public String getNew() {
		return _new;
	}

	public void setNew(String _new) {
		this._new = _new;
	}

	public Component addedDate(String addedDate) {
		this.addedDate = addedDate;
		return this;
	}

	/**
	 * Date when you added the component.
	 * 
	 * @return addedDate
	 **/
	public String getAddedDate() {
		return addedDate;
	}

	public void setAddedDate(String addedDate) {
		this.addedDate = addedDate;
	}

	public Component componentAffectsPolicyCompliance(String componentAffectsPolicyCompliance) {
		this.componentAffectsPolicyCompliance = componentAffectsPolicyCompliance;
		return this;
	}

	/**
	 * Whether the component violates the SCA policy.
	 * 
	 * @return componentAffectsPolicyCompliance
	 **/
	public String getComponentAffectsPolicyCompliance() {
		return componentAffectsPolicyCompliance;
	}

	public void setComponentAffectsPolicyCompliance(String componentAffectsPolicyCompliance) {
		this.componentAffectsPolicyCompliance = componentAffectsPolicyCompliance;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		Component component = (Component) o;
		return Objects.equals(this.filePaths, component.filePaths) && Objects.equals(this.licenses, component.licenses)
				&& Objects.equals(this.vulnerabilities, component.vulnerabilities)
				&& Objects.equals(this.violatedPolicyRules, component.violatedPolicyRules)
				&& Objects.equals(this.componentId, component.componentId)
				&& Objects.equals(this.fileName, component.fileName) && Objects.equals(this.sha1, component.sha1)
				&& Objects.equals(this.vulnerability, component.vulnerability)
				&& Objects.equals(this.maxCvssScore, component.maxCvssScore)
				&& Objects.equals(this.library, component.library) && Objects.equals(this.version, component.version)
				&& Objects.equals(this.vendor, component.vendor)
				&& Objects.equals(this.description, component.description)
				&& Objects.equals(this.blacklisted, component.blacklisted) && Objects.equals(this._new, component._new)
				&& Objects.equals(this.addedDate, component.addedDate)
				&& Objects.equals(this.componentAffectsPolicyCompliance, component.componentAffectsPolicyCompliance);
	}

	@Override
	public int hashCode() {
		return Objects.hash(filePaths, licenses, vulnerabilities, violatedPolicyRules, componentId, fileName, sha1,
				vulnerability, maxCvssScore, library, version, vendor, description, blacklisted, _new, addedDate,
				componentAffectsPolicyCompliance);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class Component {\n");

		sb.append("    filePaths: ").append(toIndentedString(filePaths)).append("\n");
		sb.append("    licenses: ").append(toIndentedString(licenses)).append("\n");
		sb.append("    vulnerabilities: ").append(toIndentedString(vulnerabilities)).append("\n");
		sb.append("    violatedPolicyRules: ").append(toIndentedString(violatedPolicyRules)).append("\n");
		sb.append("    componentId: ").append(toIndentedString(componentId)).append("\n");
		sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
		sb.append("    sha1: ").append(toIndentedString(sha1)).append("\n");
		sb.append("    vulnerability: ").append(toIndentedString(vulnerability)).append("\n");
		sb.append("    maxCvssScore: ").append(toIndentedString(maxCvssScore)).append("\n");
		sb.append("    library: ").append(toIndentedString(library)).append("\n");
		sb.append("    version: ").append(toIndentedString(version)).append("\n");
		sb.append("    vendor: ").append(toIndentedString(vendor)).append("\n");
		sb.append("    description: ").append(toIndentedString(description)).append("\n");
		sb.append("    blacklisted: ").append(toIndentedString(blacklisted)).append("\n");
		sb.append("    _new: ").append(toIndentedString(_new)).append("\n");
		sb.append("    addedDate: ").append(toIndentedString(addedDate)).append("\n");
		sb.append("    componentAffectsPolicyCompliance: ").append(toIndentedString(componentAffectsPolicyCompliance))
				.append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}
